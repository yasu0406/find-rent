{"ast":null,"code":"import _defineProperty from \"/Users/yasuhirokatayama/works/personal/find-rent/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport RoomActionTypes from './roomActionTypes';\nconst INITIAL_STATE = {\n  rooms: null\n};\n\nconst roomsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case RoomActionTypes.FETCH_ROOMS:\n      return _objectSpread({}, state, {\n        rooms: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default roomsReducer;","map":{"version":3,"sources":["/Users/yasuhirokatayama/works/personal/find-rent/client/src/redux/rooms/rooms.reducer.js"],"names":["RoomActionTypes","INITIAL_STATE","rooms","roomsReducer","state","action","type","FETCH_ROOMS","payload"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE;AADW,CAAtB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,eAAe,CAACO,WAArB;AACI,+BACOH,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAFlB;;AAIH;AACI,aAAOJ,KAAP;AAPT;AASH,CAVD;;AAYA,eAAeD,YAAf","sourcesContent":["import RoomActionTypes from './roomActionTypes';\n\nconst INITIAL_STATE = {\n    rooms: null\n}\n\nconst roomsReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case RoomActionTypes.FETCH_ROOMS:\n            return {\n                ...state,\n                rooms: action.payload\n            };\n         default:\n             return state;   \n    }\n}\n\nexport default roomsReducer;"]},"metadata":{},"sourceType":"module"}