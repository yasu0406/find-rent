{"ast":null,"code":"import _defineProperty from \"/Users/yasuhirokatayama/works/personal/find-rent/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/yasuhirokatayama/works/personal/find-rent/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yasuhirokatayama/works/personal/find-rent/client/src/components/sign-in/signIn-signUp.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { auth, signInWithGoogle, createUserProfileDocument, signInwithFacebook } from '../../firebase/firebase.util';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './signIn-signUp.styles.scss';\n\nconst SignIn = ({\n  onCancel,\n  showName\n}) => {\n  useEffect(() => {\n    return () => {\n      onCancel();\n    };\n  }, []);\n\n  const _useState = useState(showName),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        confrimEmail = _useState4[0],\n        setConfrimEmail = _useState4[1];\n\n  const _useState5 = useState({\n    email: '',\n    password: ''\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        emailAndPassword = _useState6[0],\n        setEmailAndPassword = _useState6[1];\n\n  const _useState7 = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    displayName: ''\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        signUpInfo = _useState8[0],\n        setSignUpInfo = _useState8[1];\n\n  const signInHandleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(emailAndPassword.email, emailAndPassword.password);\n      setEmailAndPassword({\n        email: '',\n        password: ''\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const signUpHandleSubmit = async event => {\n    event.preventDefault();\n    const email = signUpInfo.email,\n          password = signUpInfo.password,\n          confirmPassword = signUpInfo.confirmPassword,\n          displayName = signUpInfo.displayName;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    try {\n      const _ref = await auth.createUserWithEmailAndPassword(email, password),\n            user = _ref.user;\n\n      await createUserProfileDocument(user, {\n        displayName\n      });\n      setSignUpInfo({\n        email: '',\n        password: '',\n        confirmPassword: '',\n        displayName: ''\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const forgotSugmit = async event => {\n    event.preventDefault();\n\n    try {\n      await auth.sendPasswordResetEmail(confrimEmail);\n      alert('Send your email address');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n\n    if (show === 'signIn') {\n      setEmailAndPassword(_objectSpread({}, emailAndPassword, {\n        [name]: value\n      }));\n    } else if (show === 'forgetPass') {\n      setConfrimEmail(value);\n    } else if (show === 'signUp') {\n      setSignUpInfo(_objectSpread({}, signUpInfo, {\n        [name]: value\n      }));\n    }\n  };\n\n  const renderSignIn = () => {\n    if (show === 'signIn') {\n      return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n        className: \"sign-in-sns btn btn-fb mb-3\",\n        onClick: signInwithFacebook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-facebook\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), \"Sign In with Facebook\"), React.createElement(\"button\", {\n        className: \"sign-in-sns btn btn-gl\",\n        onClick: signInWithGoogle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-google\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), \"Sign in with Google\"), React.createElement(\"p\", {\n        className: \"text-center mt-5 mb-5 line-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Or\"), React.createElement(\"form\", {\n        onSubmit: signInHandleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: emailAndPassword.email,\n        handleChange: handleChange,\n        placeholder: \"xxxxx@gmail.com\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: emailAndPassword.password,\n        handleChange: handleChange,\n        placeholder: \"password...\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(CustomButton, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"text-green border-0 mt-3 mb-3\",\n        onClick: () => setShow('forgetPass'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Forgot password?\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Don't have an account? \", React.createElement(\"button\", {\n        className: \"text-green border-0\",\n        onClick: () => setShow('signUp'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Sign Up\"))));\n    } else if (show === 'forgetPass') {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        onSubmit: forgotSugmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: handleChange,\n        value: confrimEmail,\n        placeholder: \"xxxxx@gmail.com\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(CustomButton, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Send\"), React.createElement(\"hr\", {\n        className: \"mt-4 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Alredy have a Find account? \", React.createElement(\"button\", {\n        className: \"text-green border-0\",\n        onClick: () => setShow('signIn'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Sign in\"))));\n    } else if (show === 'signUp') {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        onSubmit: signUpHandleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: handleChange,\n        value: signUpInfo.email,\n        placeholder: \"xxxxx@gmail.com\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        name: \"displayName\",\n        type: \"text\",\n        handleChange: handleChange,\n        value: signUpInfo.displayName,\n        placeholder: \"Full Name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: signUpInfo.password,\n        handleChange: handleChange,\n        placeholder: \"password...\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        name: \"confirmPassword\",\n        type: \"password\",\n        value: signUpInfo.confirmPassword,\n        handleChange: handleChange,\n        placeholder: \"confirm password...\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(CustomButton, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Sign up\"), React.createElement(\"hr\", {\n        className: \"mt-4 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Alredy have a Find account? \", React.createElement(\"button\", {\n        className: \"text-green border-0\",\n        onClick: () => setShow('signIn'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Sign in\"))));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    id: \"myModal\",\n    className: \"modal-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"close mb-5\",\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"\\xD7\"), renderSignIn()));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/yasuhirokatayama/works/personal/find-rent/client/src/components/sign-in/signIn-signUp.component.jsx"],"names":["React","useState","useEffect","auth","signInWithGoogle","createUserProfileDocument","signInwithFacebook","FormInput","CustomButton","SignIn","onCancel","showName","show","setShow","confrimEmail","setConfrimEmail","email","password","emailAndPassword","setEmailAndPassword","confirmPassword","displayName","signUpInfo","setSignUpInfo","signInHandleSubmit","event","preventDefault","signInWithEmailAndPassword","error","console","log","signUpHandleSubmit","alert","createUserWithEmailAndPassword","user","forgotSugmit","sendPasswordResetEmail","handleChange","target","value","name","renderSignIn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { auth, signInWithGoogle, createUserProfileDocument, signInwithFacebook } from '../../firebase/firebase.util';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport './signIn-signUp.styles.scss';\n\nconst SignIn = ({onCancel, showName}) => {\n    useEffect(() => {\n        return () => {\n            onCancel();\n        }\n    },[]);\n    const [show, setShow] = useState(showName);\n    const [confrimEmail, setConfrimEmail] = useState('');\n    const [emailAndPassword, setEmailAndPassword] = useState({\n        email:'',\n        password:''\n    });\n    const [signUpInfo, setSignUpInfo] = useState({\n        email:'',\n        password:'',\n        confirmPassword:'',\n        displayName:'',\n    });\n    const signInHandleSubmit = async event => {\n        event.preventDefault();\n        try {\n          await auth.signInWithEmailAndPassword(emailAndPassword.email, emailAndPassword.password);\n          setEmailAndPassword({\n              email:'',\n              password:''\n            }\n            );\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      const signUpHandleSubmit = async event => {\n        event.preventDefault();\n\n        const {email, password, confirmPassword, displayName} = signUpInfo;\n\n\n        if (password !== confirmPassword) {\n            alert(\"passwords don't match\");\n            return;\n          }\n        try {\n            const {user} = await auth.createUserWithEmailAndPassword(\n                email,\n                password\n          )\n          await createUserProfileDocument(user, {displayName});\n          setSignUpInfo({\n                email:'',\n                password:'',\n                confirmPassword:'',\n                displayName:'',\n          })  ;\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      const forgotSugmit = async event => {\n        event.preventDefault();\n\n        try {\n            await auth.sendPasswordResetEmail(confrimEmail);\n            alert('Send your email address');\n        } catch(error) {\n            console.log(error);\n        }\n      }\n    \n      const handleChange = event => {\n        const { value, name } = event.target;\n        if(show === 'signIn') {\n            setEmailAndPassword({...emailAndPassword, [name]: value });\n        } else if(show === 'forgetPass') {\n            setConfrimEmail(value);\n        } else if(show === 'signUp') {\n            setSignUpInfo({...signUpInfo, [name]: value });\n        }\n      };\n      const renderSignIn = () => {\n          if(show === 'signIn') {\n            return (\n                <>\n                <button className=\"sign-in-sns btn btn-fb mb-3\" onClick={signInwithFacebook}><i className=\"fa fa-facebook\" />Sign In with Facebook</button>\n                <button className='sign-in-sns btn btn-gl' onClick={signInWithGoogle}><i className=\"fa fa-google\" />Sign in with Google</button>\n                <p className='text-center mt-5 mb-5 line-border'>Or</p>\n                <form onSubmit={signInHandleSubmit}>\n                    <div className='mb-5'>\n                        <FormInput\n                            name='email'\n                            type='email'\n                            value={emailAndPassword.email}\n                            handleChange={handleChange}\n                            placeholder='xxxxx@gmail.com'\n                            required \n                        />\n                        <FormInput\n                            name='password'\n                            type='password'\n                            value={emailAndPassword.password}\n                            handleChange={handleChange}\n                            placeholder='password...'\n                            required\n                        />   \n                    </div>    \n                    <CustomButton type=\"submit\">Login</CustomButton> \n                    <p className='text-center'><button className='text-green border-0 mt-3 mb-3' onClick={() => setShow('forgetPass')}>Forgot password?</button></p>\n                    <hr/>\n                    <p className='text-center'>Don't have an account? <button className='text-green border-0' onClick={() => setShow('signUp')}>Sign Up</button></p>\n                </form>\n                </>\n            )\n          } else if(show === 'forgetPass') {\n            return (\n                <>\n                <form onSubmit={forgotSugmit}>\n                    <div className='mb-5'>\n                        <FormInput\n                            name='email'\n                            type='email'\n                            handleChange={handleChange}\n                            value={confrimEmail}\n                            placeholder='xxxxx@gmail.com'\n                            required \n                        />\n                    </div>    \n                    <CustomButton type=\"submit\">Send</CustomButton> \n                    <hr className='mt-4 mb-4'/>\n                    <p className='text-center'>Alredy have a Find account? <button className='text-green border-0' onClick={() => setShow('signIn')}>Sign in</button></p>\n                </form>\n                </>\n              )\n          } else if(show === 'signUp') {\n              return (\n                <>\n                <form onSubmit={signUpHandleSubmit}>\n                    <div className='mb-5'>\n                        <FormInput\n                            name='email'\n                            type='email'\n                            handleChange={handleChange}\n                            value={signUpInfo.email}\n                            placeholder='xxxxx@gmail.com'\n                            required \n                        />\n                        <FormInput\n                            name='displayName'\n                            type='text'\n                            handleChange={handleChange}\n                            value={signUpInfo.displayName}\n                            placeholder='Full Name'\n                            required \n                        />\n                        <FormInput\n                            name='password'\n                            type='password'\n                            value={signUpInfo.password}\n                            handleChange={handleChange}\n                            placeholder='password...'\n                            required\n                        />   \n                        <FormInput\n                            name='confirmPassword'\n                            type='password'\n                            value={signUpInfo.confirmPassword}\n                            handleChange={handleChange}\n                            placeholder='confirm password...'\n                            required\n                        />   \n                    </div>    \n                    <CustomButton type=\"submit\">Sign up</CustomButton> \n                    <hr className='mt-4 mb-4'/>\n                    <p className='text-center'>Alredy have a Find account? <button className='text-green border-0' onClick={() => setShow('signIn')}>Sign in</button></p>\n                </form>\n                </>\n              )\n          }\n      }\n    return (\n        <div id=\"myModal\" className=\"modal-form\">\n            <div className=\"modal-content\">\n                <span className=\"close mb-5\" onClick={onCancel}>&times;</span>\n                {renderSignIn()}\n            </div>\n        </div>\n    );\n};\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}